[{"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js":"1","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js":"2","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Login\\index.js":"3","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js":"4","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js":"5","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js":"6","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js":"7","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js":"8","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js":"9","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js":"10","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js":"11","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js":"12","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js":"13","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js":"14","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js":"15","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js":"16","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js":"17","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js":"18","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js":"19","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js":"20","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js":"21","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js":"22"},{"size":1055,"mtime":1612692049289,"results":"23","hashOfConfig":"24"},{"size":1803,"mtime":1612595543839,"results":"25","hashOfConfig":"24"},{"size":1906,"mtime":1612611804841,"results":"26","hashOfConfig":"24"},{"size":736,"mtime":1612612713255,"results":"27","hashOfConfig":"24"},{"size":3101,"mtime":1612591534941,"results":"28","hashOfConfig":"24"},{"size":92,"mtime":1612079807564,"results":"29","hashOfConfig":"24"},{"size":5984,"mtime":1612691498884,"results":"30","hashOfConfig":"24"},{"size":5369,"mtime":1612691869779,"results":"31","hashOfConfig":"24"},{"size":1848,"mtime":1612618447710,"results":"32","hashOfConfig":"24"},{"size":1170,"mtime":1612591407364,"results":"33","hashOfConfig":"24"},{"size":2370,"mtime":1612616237002,"results":"34","hashOfConfig":"24"},{"size":1565,"mtime":1612664043903,"results":"35","hashOfConfig":"24"},{"size":2590,"mtime":1612591277450,"results":"36","hashOfConfig":"24"},{"size":1431,"mtime":1612621861537,"results":"37","hashOfConfig":"24"},{"size":1050,"mtime":1612317813361,"results":"38","hashOfConfig":"24"},{"size":841,"mtime":1612585506890,"results":"39","hashOfConfig":"24"},{"size":121,"mtime":1612074513728,"results":"40","hashOfConfig":"24"},{"size":2268,"mtime":1612586074779,"results":"41","hashOfConfig":"24"},{"size":131,"mtime":1612322608724,"results":"42","hashOfConfig":"24"},{"size":1500,"mtime":1612621375464,"results":"43","hashOfConfig":"24"},{"size":794,"mtime":1612620385477,"results":"44","hashOfConfig":"24"},{"size":770,"mtime":1612582407563,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"1pnu8eu",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js",["99","100"],"import React, { Component } from 'react';\r\nimport { Card, Form } from 'antd';\r\nimport Header from './Header'\r\nimport Reccuring from './Recurring';\r\nimport OneOff from './OneOff'\r\nimport './inputForm.css'\r\n\r\nconst tabList = [\r\n  {\r\n    key: 'tab1',\r\n    tab: 'One-Off',\r\n  },\r\n  {\r\n    key: 'tab2',\r\n    tab: 'Recurring',\r\n  },\r\n];\r\n\r\nconst contentList = {\r\n  tab1: <OneOff />,\r\n  tab2: <Reccuring />,\r\n};\r\n\r\n\r\nclass InputForm extends Component {\r\n\r\n  state = {\r\n    key: 'tab1',\r\n\r\n  };\r\n\r\n  onTabChange = (key, type) => {\r\n    // console.log(key, type);\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"job\">\r\n        {/* <Header /> */}\r\n        <Card\r\n          style={{ width: '100%' }}\r\n          title=\"Add a New Job\"\r\n          tabList={tabList}\r\n          activeTabKey={this.state.key}\r\n          onTabChange={key => {\r\n            this.onTabChange(key, 'key');\r\n          }}\r\n        >\r\n          {contentList[this.state.key]}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default InputForm;",["101","102"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Login\\index.js",["103","104","105","106"],"import React, { useState } from 'react';\r\nimport { Form, Input, Button, Checkbox, Card, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport './index.css'\r\n\r\nexport default function Login() {\r\n  const user = {\r\n    userName: 'admin',\r\n    password: 'admin123'\r\n  }\r\n\r\n  const [loginInfo, setIsLogin] = useState({ isLogin: false, message: '' })\r\n  const [userInfo, setUserInfo] = useState({ userName: '', password: '' })\r\n\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log('Received values of form: ', values);\r\n    setUserInfo(values)\r\n  };\r\n\r\n  function passport() {\r\n    if (user.userName === userInfo.userName || user.password === userInfo.password) {\r\n      setIsLogin({ isLogin: true, message: 'Success' })\r\n    }\r\n    else setIsLogin({ isLogin: false, message: 'Try again' })\r\n  }\r\n\r\n  console.log(userInfo)\r\n  return (\r\n    <Card\r\n      title='Management Login'\r\n      className='login'\r\n    >\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Please input your Username!' }]}\r\n        >\r\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your Password!' }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js",["107"],"import React, { useState } from 'react';\r\nimport './inputForm.css';\r\nimport API from '../../utils/API'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  message\r\n}\r\n  from 'antd';\r\n\r\n\r\nexport default function InputForm() {\r\n\r\n  const [form] = Form.useForm();\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  function handleSave(value) {\r\n    const newCustomer = {\r\n      phone: value.mobile,\r\n      email: value.email,\r\n      title: value.title,\r\n      fullName: value.firstName + ' ' + value.lastName,\r\n      firstName: value.firstName,\r\n      lastName: value.lastName,\r\n      address: value.street1\r\n        + ' '\r\n        + (value.street2) ? value.street2:''\r\n        + ' '\r\n        + value.cityName\r\n        + ' '\r\n        + value.stateName\r\n    }\r\n    console.log(newCustomer)\r\n    API.saveCleaner(newCustomer)\r\n      .then(res => {\r\n        message.success('Saved')\r\n      })\r\n      .catch((err) => console.log(err.response))\r\n    console.log(value)\r\n  }\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"cleanerInfo\"\r\n      onFinish={handleSave}\r\n      initialValues={{\r\n        street2: ' '\r\n      }}\r\n    >\r\n      <div className=\"site-card-wrapper cleaner\">\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title=\"New Cleaner\" bordered={true}>\r\n              <Row className=\"contactName\">\r\n                <Form.Item\r\n                  name=\"title\"\r\n                  style={{ width: \"16%\" }}\r\n                >\r\n                  <Select placeholder=\"Title\">\r\n                    <Select.Option value=\"Mr\">Mr</Select.Option>\r\n                    <Select.Option value=\"Miss\">Miss</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true, message: 'Please input First Name!' }]}\r\n                  name=\"firstName\"\r\n                  style={{ width: \"42%\" }}\r\n                >\r\n                  <Col >\r\n                    <Input placeholder=\"First Name\" />\r\n                  </Col>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true, message: 'Please input Last Name!' }]}\r\n                  name=\"lastName\"\r\n                  style={{ width: \"42%\" }}\r\n\r\n                >\r\n                  <Col >\r\n                    <Input placeholder=\"Last Name\" />\r\n                  </Col>\r\n                </Form.Item>\r\n              </Row>\r\n              <Row>\r\n                <Form.Item\r\n                  name=\"mobile\"\r\n                  style={{ width: \"100%\" }}\r\n                  rules={[\r\n                    {\r\n                      required:true,\r\n                      pattern: /^(?:\\d*)$/,\r\n                      message: \"Please input a correct mobile number\",\r\n                    },\r\n                  ]}\r\n                \r\n                >\r\n                  <Input placeholder=\"Mobile Number\" />\r\n                </Form.Item>\r\n              </Row>\r\n              <Row>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  style={{ width: \"100%\" }}\r\n                  rules={[\r\n                    {\r\n                      type: 'email',\r\n                      message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input E-mail!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Email\" />\r\n                </Form.Item>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title=\"Address\" bordered={true}>\r\n\r\n              <Form.Item\r\n                name=\"street1\"\r\n                style={{ width: \"100%\" }}\r\n                rules={[{ required: true, message: 'Please input street number' }]}\r\n              >\r\n                <Input placeholder=\"Street1\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"street2\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <Input placeholder=\"Street2\" />\r\n              </Form.Item>\r\n              <Row>\r\n                <Form.Item\r\n                  rules={[{ required: true, message: 'Please input City Name!' }]}\r\n                  name=\"cityName\"\r\n                  style={{ width: \"50%\" }}\r\n                >\r\n                  <Col >\r\n                    <Input placeholder=\"City\" />\r\n                  </Col>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true, message: 'Please input State' }]}\r\n                  name=\"stateName\"\r\n                  style={{ width: \"50%\" }}\r\n                >\r\n                  <Col >\r\n                    <Input placeholder=\"State\" />\r\n                  </Col>\r\n                </Form.Item>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"buttons\">\r\n          <Form.Item >\r\n            <Button\r\n              className=\"savetBtn\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              size={'middle'}>\r\n              Save\r\n          </Button>\r\n            <Button htmlType=\"button\" onClick={onReset}>\r\n              Reset\r\n        </Button>\r\n          </Form.Item>\r\n        </Row>\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js",["108"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Space, Row, Popconfirm } from 'antd';\r\nimport API from '../../utils/API';\r\n\r\n\r\nexport default function Customer() {\r\n\r\n  const [customerData, setCustomerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCustomers()\r\n  }, []);\r\n\r\n  function loadCustomers() {\r\n    API.getCustomers()\r\n      .then(res => {\r\n        console.log(res)\r\n        setCustomerData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  function handleDelete(id) {\r\n    API.deleteCustomer(id)\r\n      .then(\r\n        res => {\r\n          loadCustomers();\r\n        }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Company',\r\n      dataIndex: 'companyName',\r\n    },\r\n    {\r\n      title: 'Contact Person',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'contactNum',\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'operation',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"link\" info>Edit</Button>\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    // <div>test</div>\r\n    <Card title=\"Customers List\"\r\n      extra={<Button>DoSome</Button>} >\r\n      <Table\r\n        scroll={{ x: 1500 }}\r\n        sticky\r\n        dataSource={customerData}\r\n        columns={columns}\r\n      />;\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js",["109"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all Customers\r\n  getCustomers: function () {\r\n    return axios.get('/api/customers');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCustomer: function (id) {\r\n    return axios.get('/api/customers/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCustomer: function (id) {\r\n    return axios.delete('/api/customers/' + id);\r\n  },\r\n  updateCustomer: function (id, update) {\r\n    return axios.put('/api/customers/' + id, update)\r\n  },\r\n  // Saves a customer to the database\r\n  saveCustomer: function (customerData) {\r\n    return axios.post('/api/customers', customerData);\r\n  },\r\n\r\n  // Gets all Customers\r\n  getCleaners: function () {\r\n    return axios.get('/api/cleaners');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCleaner: function (id) {\r\n    return axios.get('/api/cleaners/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCleaner: function (id) {\r\n    return axios.delete('/api/cleaners/' + id);\r\n  },\r\n  // Saves a customer to the database\r\n  saveCleaner: function (customerData) {\r\n    return axios.post('/api/cleaners', customerData);\r\n  }\r\n};\r\n\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js",["110","111","112","113","114","115"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Modal } from 'antd';\r\nimport API from '../../utils/API'\r\nimport ModalList from './ModalList'\r\n\r\nexport default function Jobs() {\r\n\r\n  const [jobData, setJobData] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobData()\r\n  }, []);\r\n\r\n  function getJobData() {\r\n    API.getCustomers()\r\n      .then(res => {\r\n        console.log(\"Received data:\")\r\n        console.log(res.data)\r\n        setJobData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Type',\r\n      dataIndex: ['job', 'type'],\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: ['job', 'description'],\r\n    },\r\n    {\r\n      title: 'Client Name',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      title: 'Assigned',\r\n      dataIndex: 'cleaner',\r\n      render: function (fullName) {\r\n        if (fullName) {\r\n          return fullName\r\n        }\r\n        else return (<ModalList jobdata={jobData}/>)\r\n      }\r\n    },\r\n\r\n  ];\r\n\r\n\r\n  return (\r\n    <Card title=\"Job List\">\r\n      <Table dataSource={jobData} columns={columns} />;\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js",["116","117","118","119"],"import React, { useEffect, useState } from 'react';\r\nimport { Select, Button, Tooltip } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function Header(props) {\r\n  console.log(props)\r\n\r\n  const { clientList, handleSelectChange } = props\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h2>Job for</h2>\r\n      <Select\r\n        labelInValue\r\n        onChange={handleSelectChange}\r\n        style={{ width: '50%' }}\r\n        placeholder=\"Select a Client\"\r\n        optionFilterProp=\"children\"\r\n        filterOption={(input, option) =>\r\n          option.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n\r\n      >\r\n        {clientList.map(each => {\r\n          return <Option\r\n            key={each._id}\r\n            value={each._id}\r\n          >{each.companyName}</Option>\r\n        })}\r\n        \r\n      </Select>\r\n    </div>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js",["120","121"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport API from '../../../utils/API';\r\nimport Selection from './Selection';\r\n\r\n\r\nexport default function ModalList(props) {\r\n  const [selectId, setSelectId] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [cleanerData, setCleanerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCleaners()\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    // setConfirmLoading(true);\r\n    // API.updateCustomer\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n\r\n  function loadCleaners() {\r\n    API.getCleaners()\r\n      .then(res => {\r\n        setCleanerData(res.data)\r\n      })\r\n  }\r\n  function handleSelectChange(selected) {\r\n    console.log(selected)\r\n    setSelectId({\r\n      id: selected.key,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={showModal}>\r\n        Assign to cleaner\r\n      </Button>\r\n      <Modal\r\n        title=\"Title\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        okText=\"Assign\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <Selection\r\n          cleanerList={cleanerData}\r\n          handleSelectChange={handleSelectChange}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js",[],{"ruleId":"122","severity":1,"message":"123","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":20},{"ruleId":"122","severity":1,"message":"126","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"122","severity":1,"message":"131","line":2,"column":31,"nodeType":"124","messageId":"125","endLine":2,"endColumn":39},{"ruleId":"122","severity":1,"message":"132","line":2,"column":47,"nodeType":"124","messageId":"125","endLine":2,"endColumn":54},{"ruleId":"122","severity":1,"message":"133","line":13,"column":10,"nodeType":"124","messageId":"125","endLine":13,"endColumn":19},{"ruleId":"122","severity":1,"message":"134","line":22,"column":12,"nodeType":"124","messageId":"125","endLine":22,"endColumn":20},{"ruleId":"122","severity":1,"message":"135","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"136","line":2,"column":38,"nodeType":"124","messageId":"125","endLine":2,"endColumn":41},{"ruleId":"137","severity":1,"message":"138","line":3,"column":1,"nodeType":"139","endLine":40,"endColumn":3},{"ruleId":"122","severity":1,"message":"140","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":22},{"ruleId":"122","severity":1,"message":"141","line":2,"column":31,"nodeType":"124","messageId":"125","endLine":2,"endColumn":36},{"ruleId":"122","severity":1,"message":"142","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":24},{"ruleId":"122","severity":1,"message":"143","line":11,"column":9,"nodeType":"124","messageId":"125","endLine":11,"endColumn":18},{"ruleId":"122","severity":1,"message":"144","line":15,"column":9,"nodeType":"124","messageId":"125","endLine":15,"endColumn":17},{"ruleId":"122","severity":1,"message":"145","line":19,"column":9,"nodeType":"124","messageId":"125","endLine":19,"endColumn":21},{"ruleId":"122","severity":1,"message":"146","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"135","line":1,"column":28,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"140","line":2,"column":18,"nodeType":"124","messageId":"125","endLine":2,"endColumn":24},{"ruleId":"122","severity":1,"message":"147","line":2,"column":26,"nodeType":"124","messageId":"125","endLine":2,"endColumn":33},{"ruleId":"122","severity":1,"message":"148","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":18},{"ruleId":"122","severity":1,"message":"149","line":11,"column":26,"nodeType":"124","messageId":"125","endLine":11,"endColumn":43},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'Checkbox' is defined but never used.","'message' is defined but never used.","'loginInfo' is assigned a value but never used.","'passport' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'Modal' is defined but never used.","'isModalVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'useEffect' is defined but never used.","'Tooltip' is defined but never used.","'selectId' is assigned a value but never used.","'setConfirmLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]