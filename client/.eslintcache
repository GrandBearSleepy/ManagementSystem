[{"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js":"1","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js":"2","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js":"3","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js":"4","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js":"5","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js":"6","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js":"7","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js":"8","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js":"9","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js":"10","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js":"11","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js":"12","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js":"13","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js":"14","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js":"15","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js":"16","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js":"17","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js":"18","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js":"19","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js":"20","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js":"21","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\userContext.js":"22","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\LoginForm\\index.js":"23","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Logo\\index.js":"24"},{"size":1018,"mtime":1612781461212,"results":"25","hashOfConfig":"26"},{"size":1943,"mtime":1612700362055,"results":"27","hashOfConfig":"26"},{"size":737,"mtime":1612762547373,"results":"28","hashOfConfig":"26"},{"size":3092,"mtime":1612793638879,"results":"29","hashOfConfig":"26"},{"size":92,"mtime":1612079807564,"results":"30","hashOfConfig":"26"},{"size":5922,"mtime":1612922696697,"results":"31","hashOfConfig":"26"},{"size":5395,"mtime":1612781331033,"results":"32","hashOfConfig":"26"},{"size":2364,"mtime":1612934597523,"results":"33","hashOfConfig":"26"},{"size":2107,"mtime":1612931076837,"results":"34","hashOfConfig":"26"},{"size":2185,"mtime":1612781104816,"results":"35","hashOfConfig":"26"},{"size":1570,"mtime":1612700843532,"results":"36","hashOfConfig":"26"},{"size":2552,"mtime":1612793098977,"results":"37","hashOfConfig":"26"},{"size":2042,"mtime":1612934153028,"results":"38","hashOfConfig":"26"},{"size":1054,"mtime":1612762648281,"results":"39","hashOfConfig":"26"},{"size":640,"mtime":1612784341929,"results":"40","hashOfConfig":"26"},{"size":121,"mtime":1612074513728,"results":"41","hashOfConfig":"26"},{"size":2268,"mtime":1612586074779,"results":"42","hashOfConfig":"26"},{"size":131,"mtime":1612322608724,"results":"43","hashOfConfig":"26"},{"size":1844,"mtime":1612932909389,"results":"44","hashOfConfig":"26"},{"size":638,"mtime":1612932676736,"results":"45","hashOfConfig":"26"},{"size":1698,"mtime":1612781079180,"results":"46","hashOfConfig":"26"},{"size":104,"mtime":1612757153806,"results":"47","hashOfConfig":"26"},{"size":1650,"mtime":1612781595684,"results":"48","hashOfConfig":"26"},{"size":385,"mtime":1612772094096,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1pnu8eu",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js",[],["104","105"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js",["106","107","108"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Space, Popconfirm } from 'antd';\r\nimport API from '../../utils/API';\r\nimport './index.css'\r\n\r\n\r\nexport default function Customer() {\r\n\r\n  const [customerData, setCustomerData] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  function showDrawer() {\r\n    setVisible(true);\r\n    console.log('clicked')\r\n  };\r\n\r\n  function onClose() {\r\n    setVisible(false);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    loadCustomers()\r\n    console.log(customerData)\r\n  }, []);\r\n\r\n  function loadCustomers() {\r\n    API.getCustomers()\r\n      .then(res => {\r\n        console.log(res.data)\r\n        setCustomerData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    API.deleteCustomer(id)\r\n      .then(res => {\r\n          console.log(res)\r\n        loadCustomers();\r\n        API.deleteJob({ $in: res.data.job })\r\n        .then(res=>{console.log(res)})\r\n        }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      width: '150px',\r\n      title: 'Company',\r\n      dataIndex: 'companyName',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Contact Person',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n    },\r\n    {\r\n      width: '80px',\r\n      title: 'Phone',\r\n      dataIndex: 'contactNum',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'operation',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"link\"\r\n            info\r\n            onClick={showDrawer}\r\n          >More Info</Button>\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      className=\"customer\"\r\n      title=\"Customers List\"\r\n    >\r\n      <Table\r\n        scroll={{ x: 1500 }}\r\n        sticky\r\n        dataSource={customerData}\r\n        columns={columns}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js",["109"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all Customers\r\n  getCustomers: function () {\r\n    return axios.get('/api/customers');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCustomer: function (id) {\r\n    return axios.get('/api/customers/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCustomer: function (id) {\r\n    return axios.delete('/api/customers/' + id);\r\n  },\r\n  updateCustomer: function (id, update) {\r\n    return axios.put('/api/customers/' + id, update)\r\n  },\r\n  // Saves a customer to the database\r\n  saveCustomer: function (customerData) {\r\n    return axios.post('/api/customers', customerData);\r\n  },\r\n\r\n  // Gets all Customers\r\n  getCleaners: function () {\r\n    return axios.get('/api/cleaners');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCleaner: function (id) {\r\n    return axios.get('/api/cleaners/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCleaner: function (id) {\r\n    return axios.delete('/api/cleaners/' + id);\r\n  },\r\n  // Saves a customer to the database\r\n  saveCleaner: function (customerData) {\r\n    return axios.post('/api/cleaners', customerData);\r\n  },\r\n\r\n  getJobs: function () {\r\n    return axios.get('/api/jobs');\r\n  },\r\n  // Gets the job with the given id\r\n  getJob: function (id) {\r\n    return axios.get('/api/jobs/' + id);\r\n  },\r\n  updateJob: function (id, update) {\r\n    return axios.put('/api/jobs/' + id, update)\r\n  },\r\n  // Deletes the job with the given id\r\n  deleteJob: function (id) {\r\n    return axios.delete('/api/jobs/' + id);\r\n  },\r\n  // Saves a job to the database\r\n  saveJob: function (customerData) {\r\n    return axios.post('/api/jobs', customerData);\r\n  },\r\n  addJobToCustomer: function (customerId, jobId) {\r\n    console.log(\"Attempting to add job\" + jobId + \" to customer \" + customerId)\r\n    return axios.post('/api/customers/job/' + customerId, { jobId })\r\n  },\r\n  addJobToCleaner: function (cleanerId, jobId) {\r\n    console.log(\"Attempting to add job\" + jobId + \" to cleaner \" + cleanerId)\r\n    return axios.post('/api/cleaners/job/' + cleanerId, { jobId })\r\n  }\r\n};\r\n\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js",["110","111","112","113"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Table, Popconfirm, Space, Button } from 'antd';\r\nimport API from '../../utils/API'\r\nimport ModalList from './ModalList'\r\nimport './index.css'\r\n\r\nexport default function Jobs() {\r\n\r\n  const [jobData, setJobData] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getJobData()\r\n  }, []);\r\n\r\n  function getJobData() {\r\n    API.getJobs()\r\n      .then(res => {\r\n        console.log(\"Received data:\")\r\n        console.log(res.data)\r\n        setJobData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n  }\r\n  function handleDelete(id) {\r\n    API.deleteJob(id)\r\n      .then(\r\n        res => {\r\n          getJobData();\r\n        }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n    },\r\n    {\r\n      title: 'Assign',\r\n      dataIndex: 'assigned',\r\n      render: function (text, record) {\r\n        if (text===true) {\r\n          return 'Assigned'\r\n        }\r\n        else return (<ModalList jobId={record.key} />)\r\n      }\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'operation',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    }\r\n\r\n  ];\r\n\r\n\r\n  return (\r\n    <Card\r\n      className=\"jobs\"\r\n      title=\"Job List\">\r\n      <Table dataSource={jobData} columns={columns} />;\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js",["114"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, message } from 'antd';\r\nimport API from '../../../utils/API';\r\nimport Selection from './Selection';\r\n\r\n\r\nexport default function ModalList(props) {\r\n  const [selectId, setSelectId] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [cleanerData, setCleanerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCleaners()\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    const { jobId } = props\r\n    API.addJobToCleaner(selectId.id, jobId)\r\n      .then(res => {\r\n        message.success('Assigned')\r\n        API.updateJob(jobId, { assigned: true })\r\n          .then(res =>\r\n            setVisible(false)\r\n          )\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n\r\n  function loadCleaners() {\r\n    API.getCleaners()\r\n      .then(res => {\r\n        setCleanerData(res.data)\r\n      })\r\n  }\r\n  function handleSelectChange(selected) {\r\n    console.log(selected)\r\n    setSelectId({\r\n      id: selected.key,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={showModal}>\r\n        Assign\r\n      </Button>\r\n      <Modal\r\n        title=\"Cleaner List\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        okText=\"Assign\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <Selection\r\n          cleanerList={cleanerData}\r\n          handleSelectChange={handleSelectChange}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\userContext.js",[],["115","116"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\LoginForm\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Logo\\index.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":17,"column":12,"nodeType":"123","messageId":"124","endLine":17,"endColumn":19},{"ruleId":"126","severity":1,"message":"127","line":25,"column":6,"nodeType":"128","endLine":25,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":1,"nodeType":"132","endLine":67,"endColumn":3},{"ruleId":"121","severity":1,"message":"133","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":24},{"ruleId":"121","severity":1,"message":"134","line":12,"column":9,"nodeType":"123","messageId":"124","endLine":12,"endColumn":18},{"ruleId":"121","severity":1,"message":"135","line":16,"column":9,"nodeType":"123","messageId":"124","endLine":16,"endColumn":17},{"ruleId":"121","severity":1,"message":"136","line":20,"column":9,"nodeType":"123","messageId":"124","endLine":20,"endColumn":21},{"ruleId":"121","severity":1,"message":"137","line":11,"column":26,"nodeType":"123","messageId":"124","endLine":11,"endColumn":43},{"ruleId":"117","replacedBy":"138"},{"ruleId":"119","replacedBy":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'visible' is assigned a value but never used.","Identifier","unusedVar","'onClose' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'customerData'. Either include it or remove the dependency array.","ArrayExpression",["142"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'isModalVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'setConfirmLoading' is assigned a value but never used.",["140"],["141"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [customerData]",{"range":"145","text":"146"},[550,552],"[customerData]"]