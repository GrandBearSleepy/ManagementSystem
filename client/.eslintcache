[{"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js":"1","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js":"2"},{"size":1793,"mtime":1612497817754,"results":"3","hashOfConfig":"4"},{"size":1750,"mtime":1612497888746,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"rrhpen",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js",["11","12","13"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Space, Row, Popconfirm } from 'antd';\r\nimport API from '../../utils/API';\r\n\r\n\r\nexport default function Customer() {\r\n\r\n  const [customerData, setCustomerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCustomers()\r\n  }, []);\r\n\r\n  function loadCustomers() {\r\n    API.getCustomers()\r\n      .then(res => {\r\n        console.log(res)\r\n        setCustomerData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  function handleDelete(id) {\r\n    API.deleteCustomer(id)\r\n      .then(\r\n        res => {\r\n          loadCustomers();\r\n        }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Company',\r\n      dataIndex: 'companyName',\r\n    },\r\n    {\r\n      title: 'Contact Person',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'contactNum',\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'operation',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a >Edit</a>\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\r\n            <a>Delete</a>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    // <div>test</div>\r\n    <Card title=\"Customers List\"\r\n      extra={<Button>DoSome</Button>} >\r\n      <Table\r\n        scroll={{ x: 1500 }}\r\n        sticky\r\n        dataSource={customerData}\r\n        columns={columns}\r\n      />;\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js",["14","15"],{"ruleId":"16","severity":1,"message":"17","line":2,"column":38,"nodeType":"18","messageId":"19","endLine":2,"endColumn":41},{"ruleId":"20","severity":1,"message":"21","line":68,"column":11,"nodeType":"22","endLine":68,"endColumn":15},{"ruleId":"20","severity":1,"message":"21","line":70,"column":13,"nodeType":"22","endLine":70,"endColumn":16},{"ruleId":"20","severity":1,"message":"21","line":64,"column":11,"nodeType":"22","endLine":64,"endColumn":15},{"ruleId":"20","severity":1,"message":"21","line":66,"column":13,"nodeType":"22","endLine":66,"endColumn":16},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]