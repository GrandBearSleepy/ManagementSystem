[{"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js":"1","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js":"2","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js":"3","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js":"4","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js":"5","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js":"6","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js":"7","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js":"8","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js":"9","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js":"10","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js":"11","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js":"12","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js":"13","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js":"14","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js":"15","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js":"16","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js":"17","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js":"18","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js":"19","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js":"20","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js":"21","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\userContext.js":"22","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\LoginForm\\index.js":"23","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Logo\\index.js":"24"},{"size":1055,"mtime":1612771856217,"results":"25","hashOfConfig":"26"},{"size":1943,"mtime":1612700362055,"results":"27","hashOfConfig":"26"},{"size":737,"mtime":1612762547373,"results":"28","hashOfConfig":"26"},{"size":3208,"mtime":1612696131259,"results":"29","hashOfConfig":"26"},{"size":92,"mtime":1612079807564,"results":"30","hashOfConfig":"26"},{"size":6015,"mtime":1612771732358,"results":"31","hashOfConfig":"26"},{"size":5485,"mtime":1612771689299,"results":"32","hashOfConfig":"26"},{"size":1986,"mtime":1612700376319,"results":"33","hashOfConfig":"26"},{"size":1170,"mtime":1612591407364,"results":"34","hashOfConfig":"26"},{"size":2190,"mtime":1612772534196,"results":"35","hashOfConfig":"26"},{"size":1570,"mtime":1612700843532,"results":"36","hashOfConfig":"26"},{"size":2643,"mtime":1612696031588,"results":"37","hashOfConfig":"26"},{"size":1496,"mtime":1612746857328,"results":"38","hashOfConfig":"26"},{"size":1054,"mtime":1612762648281,"results":"39","hashOfConfig":"26"},{"size":841,"mtime":1612695666524,"results":"40","hashOfConfig":"26"},{"size":121,"mtime":1612074513728,"results":"41","hashOfConfig":"26"},{"size":2268,"mtime":1612586074779,"results":"42","hashOfConfig":"26"},{"size":131,"mtime":1612322608724,"results":"43","hashOfConfig":"26"},{"size":1513,"mtime":1612746878927,"results":"44","hashOfConfig":"26"},{"size":794,"mtime":1612620385477,"results":"45","hashOfConfig":"26"},{"size":1697,"mtime":1612773038833,"results":"46","hashOfConfig":"26"},{"size":104,"mtime":1612757153806,"results":"47","hashOfConfig":"26"},{"size":1804,"mtime":1612769053256,"results":"48","hashOfConfig":"26"},{"size":385,"mtime":1612772094096,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"1pnu8eu",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"53"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js",["109","110"],"import React, { Component } from 'react';\r\nimport { Card, Form } from 'antd';\r\nimport Header from './Header'\r\nimport Reccuring from './Recurring';\r\nimport OneOff from './OneOff'\r\nimport './inputForm.css'\r\n\r\nconst tabList = [\r\n  {\r\n    key: 'tab1',\r\n    tab: 'One-Off',\r\n  },\r\n  {\r\n    key: 'tab2',\r\n    tab: 'Recurring',\r\n  },\r\n];\r\n\r\nconst contentList = {\r\n  tab1: <OneOff />,\r\n  tab2: <Reccuring />,\r\n};\r\n\r\n\r\nclass InputForm extends Component {\r\n\r\n  state = {\r\n    key: 'tab1',\r\n\r\n  };\r\n\r\n  onTabChange = (key, type) => {\r\n    // console.log(key, type);\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"job\">\r\n        {/* <Header /> */}\r\n        <Card\r\n          style={{ width: '100%' }}\r\n          title=\"Add a New Job\"\r\n          tabList={tabList}\r\n          activeTabKey={this.state.key}\r\n          onTabChange={key => {\r\n            this.onTabChange(key, 'key');\r\n          }}\r\n        >\r\n          {contentList[this.state.key]}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default InputForm;",["111","112"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js",["113"],"import React, { useState } from 'react';\r\nimport './inputForm.css';\r\nimport API from '../../utils/API'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  message\r\n}\r\n  from 'antd';\r\n\r\n\r\nexport default function InputForm() {\r\n\r\n  const [form] = Form.useForm();\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  function handleSave(value) {\r\n    const newCustomer = {\r\n      phone: value.mobile,\r\n      email: value.email,\r\n      title: value.title,\r\n      fullName: value.firstName + ' ' + value.lastName,\r\n      firstName: value.firstName,\r\n      lastName: value.lastName,\r\n      address: value.street1\r\n        + ' '\r\n        + (value.street2) ? value.street2:''\r\n        + ' '\r\n        + value.cityName\r\n        + ' '\r\n        + value.stateName\r\n    }\r\n    console.log(newCustomer)\r\n    API.saveCleaner(newCustomer)\r\n      .then(res => {\r\n        message.success('Saved')\r\n      })\r\n      .catch((err) => console.log(err.response))\r\n    console.log(value)\r\n  }\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"cleanerInfo\"\r\n      onFinish={handleSave}\r\n      initialValues={{\r\n        street2: ' '\r\n      }}\r\n    >\r\n      <div className=\"site-card-wrapper cleaner-form\">\r\n        <Row gutter={16}>\r\n          <Col\r\n          \r\n            xs={24} md={8} lg={8}>\r\n            <Card\r\n              \r\n              title=\"New Cleaner\" bordered={true}>\r\n              <Row className=\"contactName\">\r\n                <Form.Item\r\n                  name=\"title\"\r\n                  style={{ width: \"16%\" }}\r\n                >\r\n                  <Select placeholder=\"Title\">\r\n                    <Select.Option value=\"Mr\">Mr</Select.Option>\r\n                    <Select.Option value=\"Miss\">Miss</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true, message: 'Please input First Name!' }]}\r\n                  name=\"firstName\"\r\n                  style={{ width: \"42%\" }}\r\n                >\r\n                  <Col >\r\n                    <Input placeholder=\"First Name\" />\r\n                  </Col>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true, message: 'Please input Last Name!' }]}\r\n                  name=\"lastName\"\r\n                  style={{ width: \"42%\" }}\r\n\r\n                >\r\n                  <Col >\r\n                    <Input placeholder=\"Last Name\" />\r\n                  </Col>\r\n                </Form.Item>\r\n              </Row>\r\n              <Row>\r\n                <Form.Item\r\n                  name=\"mobile\"\r\n                  style={{ width: \"100%\" }}\r\n                  rules={[\r\n                    {\r\n                      required:true,\r\n                      pattern: /^(?:\\d*)$/,\r\n                      message: \"Please input a correct mobile number\",\r\n                    },\r\n                  ]}\r\n                \r\n                >\r\n                  <Input placeholder=\"Mobile Number\" />\r\n                </Form.Item>\r\n              </Row>\r\n              <Row>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  style={{ width: \"100%\" }}\r\n                  rules={[\r\n                    {\r\n                      type: 'email',\r\n                      message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input E-mail!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Email\" />\r\n                </Form.Item>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col\r\n            xs={24} md={ 8}lg={8}>\r\n            <Card\r\n              \r\n              title=\"Address\" bordered={true}>\r\n\r\n              <Form.Item\r\n                name=\"street1\"\r\n                style={{ width: \"100%\" }}\r\n                rules={[{ required: true, message: 'Please input street number' }]}\r\n              >\r\n                <Input placeholder=\"Street1\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"street2\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <Input placeholder=\"Street2\" />\r\n              </Form.Item>\r\n              <Row>\r\n                <Form.Item\r\n                  rules={[{ required: true, message: 'Please input City Name!' }]}\r\n                  name=\"cityName\"\r\n                  style={{ width: \"50%\" }}\r\n                >\r\n                  <Col >\r\n                    <Input placeholder=\"City\" />\r\n                  </Col>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true, message: 'Please input State' }]}\r\n                  name=\"stateName\"\r\n                  style={{ width: \"50%\" }}\r\n                >\r\n                  <Col >\r\n                    <Input placeholder=\"State\" />\r\n                  </Col>\r\n                </Form.Item>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"buttons\">\r\n          <Form.Item >\r\n            <Button\r\n              className=\"ant-btn ant-btn-primary\"\r\n              htmlType=\"submit\"\r\n              size={'middle'}>\r\n              Save\r\n          </Button>\r\n            <Button htmlType=\"button\" onClick={onReset}>\r\n              Reset\r\n        </Button>\r\n          </Form.Item>\r\n        </Row>\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js",["114"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Space, Row, Popconfirm } from 'antd';\r\nimport API from '../../utils/API';\r\nimport './index.css'\r\n\r\n\r\nexport default function Customer() {\r\n\r\n  const [customerData, setCustomerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCustomers()\r\n  }, []);\r\n\r\n  function loadCustomers() {\r\n    API.getCustomers()\r\n      .then(res => {\r\n        console.log(res)\r\n        setCustomerData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  function handleDelete(id) {\r\n    API.deleteCustomer(id)\r\n      .then(\r\n        res => {\r\n          loadCustomers();\r\n        }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      width:'150px',\r\n      title: 'Company',\r\n      dataIndex: 'companyName',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Contact Person',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n    },\r\n    {\r\n      width: '80px',\r\n      title: 'Phone',\r\n      dataIndex: 'contactNum',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'operation',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"link\" info>Edit</Button>\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    // <div>test</div>\r\n    <Card\r\n      className=\"customer\"\r\n      title=\"Customers List\"\r\n      >\r\n      <Table\r\n        scroll={{ x: 1500 }}\r\n        sticky\r\n        dataSource={customerData}\r\n        columns={columns}\r\n      />;\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js",["115"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all Customers\r\n  getCustomers: function () {\r\n    return axios.get('/api/customers');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCustomer: function (id) {\r\n    return axios.get('/api/customers/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCustomer: function (id) {\r\n    return axios.delete('/api/customers/' + id);\r\n  },\r\n  updateCustomer: function (id, update) {\r\n    return axios.put('/api/customers/' + id, update)\r\n  },\r\n  // Saves a customer to the database\r\n  saveCustomer: function (customerData) {\r\n    return axios.post('/api/customers', customerData);\r\n  },\r\n\r\n  // Gets all Customers\r\n  getCleaners: function () {\r\n    return axios.get('/api/cleaners');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCleaner: function (id) {\r\n    return axios.get('/api/cleaners/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCleaner: function (id) {\r\n    return axios.delete('/api/cleaners/' + id);\r\n  },\r\n  // Saves a customer to the database\r\n  saveCleaner: function (customerData) {\r\n    return axios.post('/api/cleaners', customerData);\r\n  }\r\n};\r\n\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js",["116"],"import React, { Component } from 'react';\r\nimport { Layout, Menu, Button, Row } from 'antd';\r\nimport { adminRoutes } from '../../routes';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Logo from '../Logo'\r\nimport './frame.less';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\nconst menus = adminRoutes.filter(route => route.isNav = true);\r\n\r\n\r\n@withRouter\r\nclass Frame extends Component {\r\n\r\n  \r\nmenuOnClick = ({ key }) => {\r\n  this.props.history.push(key)\r\n  console.log(this.props.children)\r\n}\r\n\r\n  render() {\r\n\r\n    const { logout } = this.props\r\n    console.log(logout)\r\n  return (\r\n    <Layout style={{ minHeight: '100%' }}>\r\n      <Sider\r\n        breakpoint=\"lg\"\r\n        collapsedWidth=\"0\"\r\n        onBreakpoint={broken => {\r\n          console.log(broken);\r\n        }}\r\n        onCollapse={(collapsed, type) => {\r\n          console.log(collapsed, type);\r\n        }}\r\n      >\r\n        <Logo/>\r\n\r\n        <Menu\r\n          onClick={this.menuOnClick}\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{ height: '100%', borderRight: 0 }}\r\n        >\r\n          {\r\n            menus.map(menu => {\r\n              return <SubMenu\r\n                icon={menu.icon}\r\n                key={menu.pathname} title={menu.title}>\r\n                {\r\n                  menu.subMenus.map((subMenu) => {\r\n                    return <Menu.Item key={subMenu.pathname} icon={subMenu.icon}>{subMenu.title}</Menu.Item>\r\n                  })\r\n                }\r\n              </SubMenu>\r\n            })\r\n          }\r\n        </Menu>\r\n      </Sider>\r\n      <Layout>\r\n        <Header className=\"header mg-header\">\r\n          <Button \r\n            className='logout'\r\n            onClick={logout}\r\n            style={{ float: 'right', marginTop: '30px' }}>Logout</Button>\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: 24,\r\n            margin: 0,\r\n            minHeight: 280,\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n}\r\nexport default Frame;","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js",["117","118","119","120","121","122"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Modal } from 'antd';\r\nimport API from '../../utils/API'\r\nimport ModalList from './ModalList'\r\nimport './index.css'\r\n\r\nexport default function Jobs() {\r\n\r\n  const [jobData, setJobData] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobData()\r\n  }, []);\r\n\r\n  function getJobData() {\r\n    API.getCustomers()\r\n      .then(res => {\r\n        console.log(\"Received data:\")\r\n        console.log(res.data)\r\n        setJobData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'Type',\r\n      dataIndex: ['job', 'type'],\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: ['job', 'description'],\r\n    },\r\n    {\r\n      title: 'Client Name',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      title: 'Assigned',\r\n      dataIndex: 'cleaner',\r\n      render: function (fullName) {\r\n        if (fullName) {\r\n          return fullName\r\n        }\r\n        else return (<ModalList\r\n          jobdata={jobData} />)\r\n      }\r\n    },\r\n\r\n  ];\r\n\r\n\r\n  return (\r\n    <Card\r\n      className=\"jobs\"\r\n      title=\"Job List\">\r\n      <Table dataSource={jobData} columns={columns} />;\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js",["123","124","125","126"],"import React, { useEffect, useState } from 'react';\r\nimport { Select, Button, Tooltip } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function Header(props) {\r\n  console.log(props)\r\n\r\n  const { clientList, handleSelectChange } = props\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h2>Job for</h2>\r\n      <Select\r\n        labelInValue\r\n        onChange={handleSelectChange}\r\n        style={{ width: '30%' }}\r\n        placeholder=\"Select a Client\"\r\n        optionFilterProp=\"children\"\r\n        filterOption={(input, option) =>\r\n          option.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n\r\n      >\r\n        {clientList.map(each => {\r\n          return <Option\r\n            key={each._id}\r\n            value={each._id}\r\n          >{each.companyName}</Option>\r\n        })}\r\n        \r\n      </Select>\r\n    </div>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js",["127","128"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport API from '../../../utils/API';\r\nimport Selection from './Selection';\r\n\r\n\r\nexport default function ModalList(props) {\r\n  const [selectId, setSelectId] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [cleanerData, setCleanerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCleaners()\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    console.log(props)\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    // setConfirmLoading(true);\r\n    // API.updateCustomer\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n\r\n  function loadCleaners() {\r\n    API.getCleaners()\r\n      .then(res => {\r\n        setCleanerData(res.data)\r\n      })\r\n  }\r\n  function handleSelectChange(selected) {\r\n    console.log(selected)\r\n    setSelectId({\r\n      id: selected.key,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={showModal}>\r\n        Assign\r\n      </Button>\r\n      <Modal\r\n        title=\"Title\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        okText=\"Assign\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <Selection\r\n          cleanerList={cleanerData}\r\n          handleSelectChange={handleSelectChange}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js",["129"],"import './App.less';\nimport React, { useState } from 'react';\nimport { Route, Switch,Redirect } from 'react-router-dom';\nimport { Frame } from './components'\nimport LoginForm from './pages/LoginForm'\nimport { adminRoutes } from './routes';\nconst subMenus = adminRoutes.map(obj => obj.subMenus)\nconst merged = [].concat.apply([], subMenus);\nconsole.log(merged)\n\n\nconst App = () => {\n\n  const adminUser = {\n    username: 'admin',\n    password: 'admin123'\n  }\n\n  const [user, setUser] = useState('');\n  const [error, setError] = useState('')\n\n  const inputInfo = userInfo => {\n    console.log(userInfo)\n    if (userInfo.username === adminUser.username && userInfo.password === adminUser.password) {\n      console.log('login');\n      setUser(userInfo.username);\n      setError('');\n    }\n    else {\n      console.log('error');\n      setError('Details do not match!!');\n    }\n  }\n  const logout = () => {\n    setUser('');\n  }\n\n  return (\n    <div className=\"app\">\n\n      {\n        (user != '') ?\n          (<Frame logout={logout}>\n            <Switch>\n              {\n                merged.map(route => {\n                  return (\n                    <Route\n                      exact={route.exact}\n                      key={route.pathname}\n                      path={route.pathname}\n                      render={(routerProps) => {\n                        return <route.component {...routerProps} />\n                      }} />\n                  )\n                })\n              }\n              <Redirect to='/404' />\n            </Switch>\n          </Frame >) :\n          (<LoginForm\n            error={error}\n            inputInfo={inputInfo} />)\n      }\n    </div>\n\n  )\n}\nexport default App;","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\userContext.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\LoginForm\\index.js",["130","131","132","133"],"import React, { useState } from 'react';\r\nimport { Form, Input, Button, Card, Alert } from 'antd';\r\nimport { UserOutlined, LockOutlined, } from '@ant-design/icons';\r\nimport './index.css'\r\n\r\n\r\n\r\nexport default function LoginForm(props) {\r\n\r\n  console.log(props)\r\n  // console.log(test)\r\n  const [userInfo, setUserInfo] = useState({ username: '', password: '' })\r\n \r\n  // const isLogin = useContext(IsLogin)\r\n\r\n  const user = {\r\n    userName: 'admin',\r\n    password: 'admin123'\r\n  }\r\n\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    props.inputInfo(values)\r\n  };\r\n\r\n\r\n  // console.log(userInfo)\r\n  return (\r\n\r\n    <Card\r\n      title='Management Login'\r\n      className='login'\r\n    >\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Please input your Username!' }]}\r\n        >\r\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          className=\"password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your Password!' }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        {(props.error != '') ? (<Alert message={props.error} type=\"error\" showIcon />):''}\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Logo\\index.js",[],{"ruleId":"134","severity":1,"message":"135","line":2,"column":16,"nodeType":"136","messageId":"137","endLine":2,"endColumn":20},{"ruleId":"134","severity":1,"message":"138","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":14},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"144","line":2,"column":38,"nodeType":"136","messageId":"137","endLine":2,"endColumn":41},{"ruleId":"145","severity":1,"message":"146","line":3,"column":1,"nodeType":"147","endLine":40,"endColumn":3},{"ruleId":"134","severity":1,"message":"144","line":2,"column":32,"nodeType":"136","messageId":"137","endLine":2,"endColumn":35},{"ruleId":"134","severity":1,"message":"148","line":2,"column":16,"nodeType":"136","messageId":"137","endLine":2,"endColumn":22},{"ruleId":"134","severity":1,"message":"149","line":2,"column":31,"nodeType":"136","messageId":"137","endLine":2,"endColumn":36},{"ruleId":"134","severity":1,"message":"150","line":10,"column":10,"nodeType":"136","messageId":"137","endLine":10,"endColumn":24},{"ruleId":"134","severity":1,"message":"151","line":12,"column":9,"nodeType":"136","messageId":"137","endLine":12,"endColumn":18},{"ruleId":"134","severity":1,"message":"152","line":16,"column":9,"nodeType":"136","messageId":"137","endLine":16,"endColumn":17},{"ruleId":"134","severity":1,"message":"153","line":20,"column":9,"nodeType":"136","messageId":"137","endLine":20,"endColumn":21},{"ruleId":"134","severity":1,"message":"154","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"143","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"148","line":2,"column":18,"nodeType":"136","messageId":"137","endLine":2,"endColumn":24},{"ruleId":"134","severity":1,"message":"155","line":2,"column":26,"nodeType":"136","messageId":"137","endLine":2,"endColumn":33},{"ruleId":"134","severity":1,"message":"156","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":18},{"ruleId":"134","severity":1,"message":"157","line":11,"column":26,"nodeType":"136","messageId":"137","endLine":11,"endColumn":43},{"ruleId":"158","severity":1,"message":"159","line":42,"column":15,"nodeType":"160","messageId":"161","endLine":42,"endColumn":17},{"ruleId":"134","severity":1,"message":"162","line":12,"column":10,"nodeType":"136","messageId":"137","endLine":12,"endColumn":18},{"ruleId":"134","severity":1,"message":"163","line":12,"column":20,"nodeType":"136","messageId":"137","endLine":12,"endColumn":31},{"ruleId":"134","severity":1,"message":"164","line":16,"column":9,"nodeType":"136","messageId":"137","endLine":16,"endColumn":13},{"ruleId":"158","severity":1,"message":"159","line":58,"column":23,"nodeType":"160","messageId":"161","endLine":58,"endColumn":25},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"'useState' is defined but never used.","'Row' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'Modal' is defined but never used.","'isModalVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'useEffect' is defined but never used.","'Tooltip' is defined but never used.","'selectId' is assigned a value but never used.","'setConfirmLoading' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]