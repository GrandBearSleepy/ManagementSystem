[{"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js":"1","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js":"2","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js":"3","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js":"4","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js":"5","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js":"6","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js":"7","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js":"8","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js":"9","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js":"10","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js":"11","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js":"12","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js":"13","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js":"14","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js":"15","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js":"16","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js":"17","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js":"18","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js":"19","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js":"20","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js":"21","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\LoginForm\\index.js":"22","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Logo\\index.js":"23","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\infoDrawer.js":"24","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\infoDrawer.js":"25","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\jobTable.js":"26","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\JobTable\\index.js":"27","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\fire.js":"28","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Buiding\\index.js":"29","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\JobTable.js":"30","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\JobChart\\index.js":"31","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\TodoChart\\index.js":"32"},{"size":1018,"mtime":1612781461212,"results":"33","hashOfConfig":"34"},{"size":2133,"mtime":1613265988710,"results":"35","hashOfConfig":"34"},{"size":262,"mtime":1613191723704,"results":"36","hashOfConfig":"34"},{"size":3305,"mtime":1613187088578,"results":"37","hashOfConfig":"34"},{"size":92,"mtime":1612079807564,"results":"38","hashOfConfig":"34"},{"size":5956,"mtime":1613202621770,"results":"39","hashOfConfig":"34"},{"size":5375,"mtime":1613268077065,"results":"40","hashOfConfig":"34"},{"size":2237,"mtime":1613203846615,"results":"41","hashOfConfig":"34"},{"size":2109,"mtime":1613185510793,"results":"42","hashOfConfig":"34"},{"size":2153,"mtime":1613226400399,"results":"43","hashOfConfig":"34"},{"size":2115,"mtime":1613202171379,"results":"44","hashOfConfig":"34"},{"size":2747,"mtime":1613187181745,"results":"45","hashOfConfig":"34"},{"size":2305,"mtime":1613203210517,"results":"46","hashOfConfig":"34"},{"size":1164,"mtime":1613193307529,"results":"47","hashOfConfig":"34"},{"size":640,"mtime":1612784341929,"results":"48","hashOfConfig":"34"},{"size":307,"mtime":1613114526544,"results":"49","hashOfConfig":"34"},{"size":2581,"mtime":1613193515511,"results":"50","hashOfConfig":"34"},{"size":131,"mtime":1612322608724,"results":"51","hashOfConfig":"34"},{"size":1950,"mtime":1613187584387,"results":"52","hashOfConfig":"34"},{"size":638,"mtime":1612932676736,"results":"53","hashOfConfig":"34"},{"size":3055,"mtime":1613226345778,"results":"54","hashOfConfig":"34"},{"size":1395,"mtime":1613035352107,"results":"55","hashOfConfig":"34"},{"size":385,"mtime":1612772094096,"results":"56","hashOfConfig":"34"},{"size":1303,"mtime":1613194277514,"results":"57","hashOfConfig":"34"},{"size":1294,"mtime":1613193795578,"results":"58","hashOfConfig":"34"},{"size":974,"mtime":1613194023518,"results":"59","hashOfConfig":"34"},{"size":939,"mtime":1613194368105,"results":"60","hashOfConfig":"34"},{"size":515,"mtime":1613191121648,"results":"61","hashOfConfig":"34"},{"size":344,"mtime":1613208389493,"results":"62","hashOfConfig":"34"},{"size":905,"mtime":1613194071408,"results":"63","hashOfConfig":"34"},{"size":1336,"mtime":1613202195521,"results":"64","hashOfConfig":"34"},{"size":539,"mtime":1613205398495,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1pnu8eu",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js",[],["140","141"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js",["142"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Space, Popconfirm } from 'antd';\r\nimport API from '../../utils/API';\r\nimport './index.css'\r\nimport InfoDrawer from './infoDrawer';\r\n\r\n\r\nexport default function Cleaner() {\r\n\r\n  const [cleanerData, setCleanerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCleaners()\r\n  }, []);\r\n\r\n  function loadCleaners() {\r\n    API.getCleaners()\r\n      .then(res => {\r\n        console.log(\"Received data:\")\r\n        console.log(res.data)\r\n        setCleanerData(res.data.map(x => ({ ...x, key: x._id })))\r\n        // console.log(cleanerData)\r\n\r\n      }\r\n      )\r\n  }\r\n  function handlerDelete(id) {\r\n    API.deleteCleaner(id)\r\n      .then(res => {\r\n        loadCleaners();\r\n        const jobIds = res.data.job\r\n        jobIds.map(id => {\r\n          API.updateJob(id,{assigned:false,to:''})\r\n        })\r\n        }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      width: '50px',\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Name',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      width: '80px',\r\n      title: 'Phone',\r\n      dataIndex: 'phone',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'operation',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <InfoDrawer cleanerData={record} />\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handlerDelete(record.key)}>\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n\r\n  return (\r\n    <Card\r\n      className=\"cleaners\"\r\n      title=\"Cleaner List\"\r\n       >\r\n      <Table\r\n        className=\"cleaners-tab\"\r\n        scroll={{ x: 1500 }}\r\n        sticky\r\n        dataSource={cleanerData}\r\n        columns={columns}\r\n      />;\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js",["143"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Space, Popconfirm } from 'antd';\r\nimport API from '../../utils/API';\r\nimport './index.css'\r\nimport InfoDrawer from './infoDrawer';\r\n\r\n\r\nexport default function Customer() {\r\n\r\n  const [customerData, setCustomerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCustomers()\r\n  }, []);\r\n\r\n\r\n  function loadCustomers() {\r\n    API.getCustomers()\r\n      .then(res => {\r\n        setCustomerData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    API.deleteCustomer(id)\r\n      .then(res => {\r\n        console.log(res)\r\n        loadCustomers();\r\n        const jobIds = res.data.job\r\n        console.log(jobIds)\r\n        jobIds.map(id => {\r\n          API.deleteJob(id)\r\n          .then(res=>{console.log(res)})\r\n        })\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      width: '150px',\r\n      title: 'Company',\r\n      dataIndex: 'companyName',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Contact Person',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n    },\r\n    {\r\n      width: '80px',\r\n      title: 'Phone',\r\n      dataIndex: 'contactNum',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'operation',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <InfoDrawer customerData={record}/>\r\n          <Popconfirm title=\"Sure to delete? If confirm, all related jobs will be deleted\" onConfirm={() => handleDelete(record.key)}>\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      className=\"customer\"\r\n      title=\"Customers List\"\r\n    >\r\n      <Table \r\n        className=\"customer-tab\"\r\n        scroll={{ x: 1500 }}\r\n        sticky\r\n        dataSource={customerData}\r\n        columns={columns}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js",["144"],"import axios from \"axios\";\r\n\r\n\r\nexport default {\r\n  // Gets all Customers\r\n  getCustomers: function () {\r\n    return axios.get('/api/customers');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCustomer: function (id) {\r\n    return axios.get('/api/customers/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCustomer: function (id) {\r\n    return axios.delete('/api/customers/' + id);\r\n  },\r\n  updateCustomer: function (id, update) {\r\n    return axios.put('/api/customers/' + id, update)\r\n  },\r\n  // Saves a customer to the database\r\n  saveCustomer: function (customerData) {\r\n    return axios.post('/api/customers', customerData);\r\n  },\r\n\r\n  // Gets all Customers\r\n  getCleaners: function () {\r\n    return axios.get('/api/cleaners');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCleaner: function (id) {\r\n    return axios.get('/api/cleaners/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCleaner: function (id) {\r\n    return axios.delete('/api/cleaners/' + id);\r\n  },\r\n  // Saves a customer to the database\r\n  saveCleaner: function (customerData) {\r\n    return axios.post('/api/cleaners', customerData);\r\n  },\r\n\r\n  getJobs: function () {\r\n    return axios.get('/api/jobs');\r\n  },\r\n  // Gets the job with the given id\r\n  getJob: function (id) {\r\n    return axios.get('/api/jobs/' + id);\r\n  },\r\n  updateJob: function (id, update) {\r\n    return axios.put('/api/jobs/' + id, update)\r\n  },\r\n  // Deletes the job with the given id\r\n  deleteJob: function (id) {\r\n    return axios.delete('/api/jobs/' + id);\r\n  },\r\n  // Saves a job to the database\r\n  saveJob: function (customerData) {\r\n    return axios.post('/api/jobs', customerData);\r\n  },\r\n  addJobToCustomer: function (customerId, jobId) {\r\n    console.log(\"Attempting to add job\" + jobId + \" to customer \" + customerId)\r\n    return axios.post('/api/customers/job/' + customerId, { jobId })\r\n  },\r\n  addJobToCleaner: function (cleanerId, jobId) {\r\n    console.log(\"Attempting to add job\" + jobId + \" to cleaner \" + cleanerId)\r\n    return axios.post('/api/cleaners/job/' + cleanerId, { jobId })\r\n  }\r\n};\r\n\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js",["145"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, message } from 'antd';\r\nimport API from '../../../utils/API';\r\nimport Selection from './Selection';\r\n\r\n\r\nexport default function ModalList(props) {\r\n\r\n  const [selectId, setSelectId] = useState({ id: '', value: '' });\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [cleanerData, setCleanerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCleaners()\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    const { jobId, getJobData } = props\r\n    API.addJobToCleaner(selectId.id, jobId)\r\n      .then(res => {\r\n        message.success('Assigned')\r\n        API.updateJob(jobId, { assigned: true, to: selectId.value })\r\n          .then(res =>\r\n            setVisible(false)\r\n          )\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n        getJobData()\r\n      }\r\n\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n\r\n  function loadCleaners() {\r\n    API.getCleaners()\r\n      .then(res => {\r\n        setCleanerData(res.data)\r\n      })\r\n  }\r\n  function handleSelectChange(selected) {\r\n    console.log(selected)\r\n    setSelectId({\r\n      id: selected.key,\r\n      value: selected.label\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={showModal}>\r\n        Assign\r\n      </Button>\r\n      <Modal\r\n        title=\"Cleaner List\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        okText=\"Assign\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <Selection\r\n          cleanerList={cleanerData}\r\n          handleSelectChange={handleSelectChange}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js",["146","147","148","149"],"import './App.less';\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Frame } from './components'\nimport LoginForm from './pages/LoginForm'\nimport { adminRoutes } from './routes';\nimport fire from './fire';\nconst subMenus = adminRoutes.map(obj => obj.subMenus)\nconst merged = [].concat.apply([], subMenus);\nconsole.log(merged)\n\n\nconst App = () => {\n\n  //************************* */\n  const [user, setUser] = useState('');\n  const [password, setPassord] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('')\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassord('');\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n            setEmailError(err.message)\n            break;\n          case 'auth/wrong-password':\n            setPasswordError(err.message);\n            break\n\n        }\n      })\n  }\n  const handleSignup = () => {\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n            setEmailError(err.message)\n            break;\n          case 'auth/weak-password':\n            setPasswordError(err.message);\n            break\n        }\n      })\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  }\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs()\n        setUser(user);\n      } else {\n        setUser('')\n      }\n    })\n  };\n\n  useEffect(() => {\n    authListener()\n  }, []);\n\n  return (\n    <div className=\"app\">\n\n      {\n        (!user) ?\n          (<LoginForm\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassord={setPassord}\n            handleLogin={handleLogin}\n            emailError={emailError}\n            passwordError={passwordError}\n          />)\n          :\n          (<Frame\n            logout={handleLogout}>\n            <Switch>\n              {\n                merged.map(route => {\n                  return (\n                    <Route\n                      exact={route.exact}\n                      key={route.pathname}\n                      path={route.pathname}\n                      render={(routerProps) => {\n                        return <route.component {...routerProps} />\n                      }} />\n                  )\n                })\n              }\n              <Redirect to='/404' />\n            </Switch>\n          </Frame >)\n      }\n    </div>\n  )\n}\nexport default App;","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\LoginForm\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Logo\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\infoDrawer.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\infoDrawer.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\jobTable.js",["150"],"import React from 'react';\r\nimport { Table } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport default function JobTable(props) {\r\n\r\n\r\n  function formatTime(val) {\r\n    return val ? moment(val).format('YYYY-MM-DD') : ''\r\n  }\r\n  console.log(props)\r\n  const columns = [\r\n    {\r\n      width: '200px',\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n      key: '_id',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Details',\r\n      dataIndex: 'description',\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Client Name',\r\n      dataIndex: 'from',\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Start Date',\r\n      dataIndex: 'startDate',\r\n      key: '_id',\r\n      render: formatTime\r\n    },\r\n  ];\r\n  return (\r\n    <Table columns={columns} dataSource={props.jobs} />\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\JobTable\\index.js",["151"],"import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nexport default function JobTable(props) {\r\n  console.log(props)\r\n  function formatCurrency(val) {\r\n    return ('$' + val)\r\n  }\r\n  const columns = [\r\n    {\r\n      width: '200px',\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n      key: '_id',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Price(AUD)',\r\n      dataIndex: 'price',\r\n      render: formatCurrency,\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Details',\r\n      dataIndex: 'description',\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Cleaner',\r\n      dataIndex: 'to',\r\n      render: function (text, record) {\r\n        if (text) {\r\n          return text\r\n        } else {return 'Not assigned yet'}\r\n      },\r\n      key: '_id',\r\n    },\r\n  ];\r\n  return (\r\n    <Table columns={columns} dataSource={props.jobs} />\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\fire.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Buiding\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\JobTable.js",["152"],"import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nexport default function JobTable(props) {\r\n  console.log(props)\r\n  function formatCurrency(val) {\r\n    return ('$' + val)\r\n  }\r\n  const columns = [\r\n    {\r\n      width: '200px',\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n      key: '_id',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Price(AUD)',\r\n      dataIndex: 'price',\r\n      render: formatCurrency,\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Details',\r\n      dataIndex: 'description',\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'From',\r\n      dataIndex: 'from',\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Cleaner',\r\n      dataIndex: 'to',\r\n      key: '_id',\r\n    },\r\n  ];\r\n  return (\r\n    <Table columns={columns} dataSource={props.jobs} />\r\n  )\r\n}\r\n",["153","154"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\JobChart\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\TodoChart\\index.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":32,"column":23,"nodeType":"161","messageId":"162","endLine":32,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":35,"column":23,"nodeType":"161","messageId":"162","endLine":35,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":4,"column":1,"nodeType":"165","endLine":68,"endColumn":3},{"ruleId":"166","severity":1,"message":"167","line":12,"column":26,"nodeType":"168","messageId":"169","endLine":12,"endColumn":43},{"ruleId":"170","severity":1,"message":"171","line":39,"column":9,"nodeType":"172","messageId":"173","endLine":49,"endColumn":10},{"ruleId":"166","severity":1,"message":"174","line":52,"column":9,"nodeType":"168","messageId":"169","endLine":52,"endColumn":21},{"ruleId":"170","severity":1,"message":"171","line":58,"column":9,"nodeType":"172","messageId":"173","endLine":66,"endColumn":10},{"ruleId":"175","severity":1,"message":"176","line":87,"column":6,"nodeType":"177","endLine":87,"endColumn":8,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":18,"column":23,"nodeType":"181","endLine":18,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":15,"column":23,"nodeType":"181","endLine":15,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":15,"column":23,"nodeType":"181","endLine":15,"endColumn":26},{"ruleId":"155","replacedBy":"182"},{"ruleId":"157","replacedBy":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'setConfirmLoading' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleSignup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["186"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["184"],["185"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},"Update the dependencies array to be: [authListener]",{"range":"189","text":"190"},[2060,2062],"[authListener]"]