[{"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js":"1","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js":"2","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js":"3","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js":"4","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js":"5","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js":"6","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js":"7","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js":"8","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js":"9","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js":"10","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js":"11","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js":"12","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js":"13","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js":"14","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js":"15","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js":"16","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js":"17","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js":"18","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js":"19","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js":"20","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js":"21","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\userContext.js":"22","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\LoginForm\\index.js":"23","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Logo\\index.js":"24","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\infoDrawer.js":"25","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\infoDrawer.js":"26","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\jobTable.js":"27","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\JobTable\\index.js":"28"},{"size":1018,"mtime":1612781461212,"results":"29","hashOfConfig":"30"},{"size":1982,"mtime":1612944565383,"results":"31","hashOfConfig":"30"},{"size":737,"mtime":1612762547373,"results":"32","hashOfConfig":"30"},{"size":3278,"mtime":1612949517018,"results":"33","hashOfConfig":"30"},{"size":92,"mtime":1612079807564,"results":"34","hashOfConfig":"30"},{"size":5922,"mtime":1612922696697,"results":"35","hashOfConfig":"30"},{"size":5395,"mtime":1612781331033,"results":"36","hashOfConfig":"30"},{"size":2157,"mtime":1612941942972,"results":"37","hashOfConfig":"30"},{"size":2107,"mtime":1612931076837,"results":"38","hashOfConfig":"30"},{"size":2185,"mtime":1612781104816,"results":"39","hashOfConfig":"30"},{"size":1570,"mtime":1612700843532,"results":"40","hashOfConfig":"30"},{"size":2697,"mtime":1612949527151,"results":"41","hashOfConfig":"30"},{"size":2204,"mtime":1612950910743,"results":"42","hashOfConfig":"30"},{"size":1054,"mtime":1612762648281,"results":"43","hashOfConfig":"30"},{"size":640,"mtime":1612784341929,"results":"44","hashOfConfig":"30"},{"size":121,"mtime":1612074513728,"results":"45","hashOfConfig":"30"},{"size":2268,"mtime":1612586074779,"results":"46","hashOfConfig":"30"},{"size":131,"mtime":1612322608724,"results":"47","hashOfConfig":"30"},{"size":1890,"mtime":1612947136895,"results":"48","hashOfConfig":"30"},{"size":638,"mtime":1612932676736,"results":"49","hashOfConfig":"30"},{"size":1698,"mtime":1612781079180,"results":"50","hashOfConfig":"30"},{"size":104,"mtime":1612757153806,"results":"51","hashOfConfig":"30"},{"size":1549,"mtime":1612947633397,"results":"52","hashOfConfig":"30"},{"size":385,"mtime":1612772094096,"results":"53","hashOfConfig":"30"},{"size":1386,"mtime":1612946553467,"results":"54","hashOfConfig":"30"},{"size":1309,"mtime":1612946576171,"results":"55","hashOfConfig":"30"},{"size":595,"mtime":1612946377639,"results":"56","hashOfConfig":"30"},{"size":694,"mtime":1612950960154,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1pnu8eu",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\inputForm.js",[],["122","123"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Recurring\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\inputForm.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\inputForm.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\index.js",["124"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Space, Popconfirm } from 'antd';\r\nimport API from '../../utils/API';\r\nimport './index.css'\r\nimport InfoDrawer from './infoDrawer';\r\n\r\n\r\nexport default function Customer() {\r\n\r\n  const [customerData, setCustomerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCustomers()\r\n  }, []);\r\n\r\n\r\n  function loadCustomers() {\r\n    API.getCustomers()\r\n      .then(res => {\r\n        setCustomerData(res.data.map(x => ({ ...x, key: x._id })))\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    API.deleteCustomer(id)\r\n      .then(res => {\r\n        console.log(res)\r\n        loadCustomers();\r\n        const jobIds = res.data.job\r\n        console.log(jobIds)\r\n        jobIds.map(id => {\r\n          API.deleteJob(id)\r\n          .then(res=>{console.log(res)})\r\n        })\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      width: '150px',\r\n      title: 'Company',\r\n      dataIndex: 'companyName',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Contact Person',\r\n      dataIndex: 'fullName',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n    },\r\n    {\r\n      width: '80px',\r\n      title: 'Phone',\r\n      dataIndex: 'contactNum',\r\n    },\r\n    {\r\n      width: '100px',\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'operation',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <InfoDrawer customerData={record}/>\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      className=\"customer\"\r\n      title=\"Customers List\"\r\n    >\r\n      <Table\r\n        scroll={{ x: 1500 }}\r\n        sticky\r\n        dataSource={customerData}\r\n        columns={columns}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\API.js",["125"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all Customers\r\n  getCustomers: function () {\r\n    return axios.get('/api/customers');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCustomer: function (id) {\r\n    return axios.get('/api/customers/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCustomer: function (id) {\r\n    return axios.delete('/api/customers/' + id);\r\n  },\r\n  updateCustomer: function (id, update) {\r\n    return axios.put('/api/customers/' + id, update)\r\n  },\r\n  // Saves a customer to the database\r\n  saveCustomer: function (customerData) {\r\n    return axios.post('/api/customers', customerData);\r\n  },\r\n\r\n  // Gets all Customers\r\n  getCleaners: function () {\r\n    return axios.get('/api/cleaners');\r\n  },\r\n  // Gets the customer with the given id\r\n  getCleaner: function (id) {\r\n    return axios.get('/api/cleaners/' + id);\r\n  },\r\n  // Deletes the customer with the given id\r\n  deleteCleaner: function (id) {\r\n    return axios.delete('/api/cleaners/' + id);\r\n  },\r\n  // Saves a customer to the database\r\n  saveCleaner: function (customerData) {\r\n    return axios.post('/api/cleaners', customerData);\r\n  },\r\n\r\n  getJobs: function () {\r\n    return axios.get('/api/jobs');\r\n  },\r\n  // Gets the job with the given id\r\n  getJob: function (id) {\r\n    return axios.get('/api/jobs/' + id);\r\n  },\r\n  updateJob: function (id, update) {\r\n    return axios.put('/api/jobs/' + id, update)\r\n  },\r\n  // Deletes the job with the given id\r\n  deleteJob: function (id) {\r\n    return axios.delete('/api/jobs/' + id);\r\n  },\r\n  // Saves a job to the database\r\n  saveJob: function (customerData) {\r\n    return axios.post('/api/jobs', customerData);\r\n  },\r\n  addJobToCustomer: function (customerId, jobId) {\r\n    console.log(\"Attempting to add job\" + jobId + \" to customer \" + customerId)\r\n    return axios.post('/api/customers/job/' + customerId, { jobId })\r\n  },\r\n  addJobToCleaner: function (cleanerId, jobId) {\r\n    console.log(\"Attempting to add job\" + jobId + \" to cleaner \" + cleanerId)\r\n    return axios.post('/api/cleaners/job/' + cleanerId, { jobId })\r\n  }\r\n};\r\n\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Frame\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Home\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\OneOff\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\Header\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\NotFound\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\routes\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Loading\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\index.js",["126"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, message } from 'antd';\r\nimport API from '../../../utils/API';\r\nimport Selection from './Selection';\r\n\r\n\r\nexport default function ModalList(props) {\r\n\r\n  const [selectId, setSelectId] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [cleanerData, setCleanerData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCleaners()\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    const { jobId, getJobData } = props\r\n    API.addJobToCleaner(selectId.id, jobId)\r\n      .then(res => {\r\n        message.success('Assigned')\r\n        API.updateJob(jobId, { assigned: true })\r\n          .then(res =>\r\n            setVisible(false)\r\n          )\r\n          .catch(err => {\r\n            console.log(err)\r\n          })\r\n        getJobData()\r\n      }\r\n        \r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n\r\n  function loadCleaners() {\r\n    API.getCleaners()\r\n      .then(res => {\r\n        setCleanerData(res.data)\r\n      })\r\n  }\r\n  function handleSelectChange(selected) {\r\n    console.log(selected)\r\n    setSelectId({\r\n      id: selected.key,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={showModal}>\r\n        Assign\r\n      </Button>\r\n      <Modal\r\n        title=\"Cleaner List\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        okText=\"Assign\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <Selection\r\n          cleanerList={cleanerData}\r\n          handleSelectChange={handleSelectChange}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Work\\ModalList\\Selection\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\App.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\utils\\userContext.js",[],["127","128"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\LoginForm\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\Logo\\index.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Customer\\infoDrawer.js",["129"],"import React, { useState } from 'react';\r\nimport { Drawer, List, Divider, Col, Row, Button } from 'antd';\r\nimport './infoDrawer.css'\r\nimport JobTable from '../../components/JobTable';\r\n\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div className=\"site-description-item-profile-wrapper\">\r\n    <p className=\"site-description-item-profile-p-label\">{title}:</p>\r\n    {content}\r\n  </div>\r\n);\r\n\r\nexport default function InfoDrawer(props) {\r\n\r\n  const { customerData } = props\r\n  console.log(props)\r\n  const [visible, setVisible] = useState(false);\r\n  function showDrawer() {\r\n    setVisible(true);\r\n  };\r\n\r\n  function onClose() {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={showDrawer}>\r\n        More Info\r\n      </Button>\r\n\r\n      <Drawer\r\n        width={640}\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}\r\n      >\r\n        <h4 className=\"site-description-item-profile-p\">Company Detail</h4>\r\n        <Row>\r\n          <Col\r\n            className=\"com-name\"\r\n            span={12}>\r\n            <DescriptionItem title=\"Comany Name\" content={customerData.companyName} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Divider orientation=\"left\">Job List</Divider>\r\n          <JobTable jobs={customerData.job}/>\r\n        </Row>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\infoDrawer.js",[],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\pages\\Cleaner\\jobTable.js",["130"],"import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nexport default function JobTable(props) {\r\n  console.log(props)\r\n  const columns = [\r\n    {\r\n      width: '200px',\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n      key: '_id',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: '_id',\r\n    },\r\n    {\r\n      width: '200px',\r\n      title: 'Details',\r\n      dataIndex: 'description',\r\n      key: '_id',\r\n    },\r\n  ];\r\n  return (\r\n    <Table columns={columns} dataSource={props.jobs} />\r\n  )\r\n}\r\n",["131","132"],"C:\\UWA\\MyProject\\ManagementSystem\\client\\src\\components\\JobTable\\index.js",["133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":35,"column":23,"nodeType":"140","messageId":"141","endLine":35,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":3,"column":1,"nodeType":"144","endLine":67,"endColumn":3},{"ruleId":"145","severity":1,"message":"146","line":12,"column":26,"nodeType":"147","messageId":"148","endLine":12,"endColumn":43},{"ruleId":"134","replacedBy":"149"},{"ruleId":"136","replacedBy":"150"},{"ruleId":"145","severity":1,"message":"151","line":2,"column":18,"nodeType":"147","messageId":"148","endLine":2,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":12,"column":23,"nodeType":"154","endLine":12,"endColumn":26},{"ruleId":"134","replacedBy":"155"},{"ruleId":"136","replacedBy":"156"},{"ruleId":"152","severity":1,"message":"153","line":15,"column":23,"nodeType":"154","endLine":15,"endColumn":26},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'setConfirmLoading' is assigned a value but never used.","Identifier","unusedVar",["157"],["158"],"'List' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["157"],["158"],"no-global-assign","no-unsafe-negation"]